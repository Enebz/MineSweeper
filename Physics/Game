#pragma once

#pragma once

#include "Minesweeper.h"
#include "Controls.h"

class Game {

public:
    sf::RenderWindow window;
    sf::FloatRect visibleArea;

    sf::Texture textures;

    int width = 50;
    int height = 25;
    int bombs = std::floor((width*height)/8);
    int tileSize = 32;
    int headerSize = 64;

    Minesweeper minesweeper = Minesweeper(tileSize, textures, sf::FloatRect(0, headerSize, tileSize * width, tileSize * height));;
    Controls controls = Controls(minesweeper, sf::FloatRect(0, 0, tileSize * width, headerSize));

    Game()
    {
        // Set visible area
        visibleArea = sf::FloatRect(0, 0, tileSize * width, tileSize * height + headerSize);

        // Create window
        window.create(sf::VideoMode(visibleArea.width, visibleArea.height), "Minesweeper!", sf::Style::Close);

        // Load textures
        if (!textures.loadFromFile("tiles.png"))
        {
            std::cerr << "failed to load image" << std::endl;
            exit(1);
        }     
    }

    void run() {
        init();
        while (window.isOpen()) {
            update();
            render();
        }
    }    

    void init()
    {
        minesweeper.newGame(width, height, bombs);
    }

    void update() {
        sf::Event event;
        while (window.pollEvent(event))
        {
            switch (event.type)
            {
            case sf::Event::Closed:
                window.close();
                break;

            case sf::Event::Resized:
                visibleArea = sf::FloatRect(0, 0, event.size.width, event.size.height);
                window.setView(sf::View(visibleArea));
                break;

            case sf::Event::MouseButtonPressed:

                // Register events
                minesweeper.onClick(event.mouseButton);
                controls.onClick(event.mouseButton);
                
            }
        }

        minesweeper.update();
    }

    void render() {
        window.clear(sf::Color(100, 100, 100));
        

        window.display();
    }
};